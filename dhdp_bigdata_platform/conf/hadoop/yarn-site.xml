<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>
<!-- 开启 RM 高可用 -->
    <property>
         <name>yarn.resourcemanager.ha.enabled</name>
         <value>true</value>
    </property>
    <!-- 指定 RM 的 cluster id，这个myyarn是resourcemanager两个主节点的组名，可以随便起 -->
    <property>
         <name>yarn.resourcemanager.cluster-id</name>
         <value>myyarn</value>
    </property>
    <!-- 指定 RM 的名字 -->
    <property>
         <name>yarn.resourcemanager.ha.rm-ids</name>
         <value>rm1,rm2</value>
    </property>
    <!-- 分别指定 RM 的地址 -->
    <property>
         <name>yarn.resourcemanager.hostname.rm1</name>
         <value>hadoop01</value>
    </property>
    <property>
         <name>yarn.resourcemanager.hostname.rm2</name>
         <value>hadoop02</value>
    </property>
    <!-- 要运行 MapReduce 程序必须配置的附属服务 -->
    <property>
         <name>yarn.nodemanager.aux-services</name>
         <value>mapreduce_shuffle</value>
     </property>
    <!-- 启用RM故障自动恢复 -->
    <property>
         <name>yarn.resourcemanager.recovery.enabled</name>
         <value>true</value>
    </property>
	<!-- 该节点上YARN可使用的物理内存总量,默认是8192MB,注意，如果你的节点内存资源不够8GB,则需要对应调减小这个值 -->
	<property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>2048</value>
        <description>Amount of physical memory, in MB, that can be allocated for containers.Default:8192</description>
    </property>
	<!--单个任务可申请的最少物理内存量,默认是1024MB,如果一个任务申请的物理内存量少于该值,则该对应的值改为这个数-->
	<property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>1024</value>
        <description>The minimum allocation for every container request at the RM, in MBs. Memory requests lower than
            this will throw a InvalidResourceRequestException.Default:1024
        </description>
    </property>
	<!--单个任务可申请的最大物理内存量,默认是8192MB,如果一个任务申请的物理内存量少于该值,则该对应的值改为这个数-->
	<property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>3072</value>
        <description>The maximum allocation for every container request at the RM, in MBs. Memory requests higher than
            this will throw a InvalidResourceRequestException.Default:8192
        </description>
    </property>
	<!-- 任务每使用1MB物理内存，最多可使用虚拟内存量，默认是2.1 -->
	<property>
        <name>yarn.nodemanager.vmem-pmem-ratio</name>
        <value>4</value>
    </property>
    <!-- 指定 resourcemanager 的状态信息存储在 zookeeper 集群上-->
    <property>
        <name>yarn.resourcemanager.store.class</name>
        <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
    </property>
	<!-- 指定 zk 集群地址 -->
    <property>
         <name>yarn.resourcemanager.zk-address</name>
         <value>hadoop01:2181,hadoop02:2181,hadoop03:2181</value>
    </property>
	<!-- 指定resourcemanager与zk通讯的超时时间 -->
	<property>
		<name>yarn.resourcemanager.zk-timeout-ms</name>
		<value>60000</value>
		<description>ZooKeeper session timeout in milliseconds. Session expiration
			is managed by the ZooKeeper cluster itself, not by the client. This value is
			used by the cluster to determine when the client's session expires.
			Expirations happens when the cluster does not hear from the client within
			the specified session timeout period (i.e. no heartbeat).
		</description>
	</property>
	<!-- 配置yarn的web ui 访问https -->
	<property>
		<description>
			This configures the HTTP endpoint for Yarn Daemons.The following
			values are supported:
			- HTTP_ONLY : Service is provided only on http
			- HTTPS_ONLY : Service is provided only on https
		</description>
		<name>yarn.http.policy</name>
		<value>HTTPS_ONLY</value>
	</property>
	<!-- 指定RM1的Web端访问地址 -->
	<property>
        <name>yarn.resourcemanager.webapp.address.rm1</name>
        <value>hadoop01:23188</value>
    </property>
	<!-- RM1 HTTP访问地址,查看集群信息 -->
    <property>
        <name>yarn.resourcemanager.webapp.https.address.rm1</name>
        <value>hadoop01:23188</value>
    </property>
	<!-- 指定RM2的Web端访问地址 -->
	<property>
        <name>yarn.resourcemanager.webapp.address.rm2</name>
        <value>hadoop02:23188</value>
    </property>
	<!-- RM2 HTTP访问地址,查看集群信息 -->
    <property>
        <name>yarn.resourcemanager.webapp.https.address.rm2</name>
        <value>hadoop02:23188</value>
    </property>
    <!-- 开启 YARN 集群的日志聚合功能 -->
    <property>
         <name>yarn.log-aggregation-enable</name>
         <value>true</value>
    </property>
	<!-- YARN 集群的聚合日志最长保留时长 -->
    <property>
         <name>yarn.log-aggregation.retain-seconds</name>
		 <!--7days:604800-->
         <value>86400</value>
    </property>
	<!-- 配置yarn提交的app程序在hdfs上的日志存储路径 -->
	<property>
		<description>Where to aggregate logs to.</description>
		<name>yarn.nodemanager.remote-app-log-dir</name>
		<value>/tmp/logs/yarn-nodemanager</value>
	</property>
   
    <property>
     	 <name>yarn.nodemanager.container-executor.class</name>
      	 <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
    </property>
	<!--此处的group为nodemanager用户所属组-->
    <property>
     	 <name>yarn.nodemanager.linux-container-executor.group</name>
     	 <value>hadoop</value>
    </property>
</configuration>
